/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9-dev */

#ifndef PB_PROTO_WEATHER_READING_PB_H_INCLUDED
#define PB_PROTO_WEATHER_READING_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _WeatherReadingMessage {
    float temperature;
    float humidity;
    float barometric_pressure;
    float wind_speed;
    float rainfall;
    uint32_t wind_direction;
} WeatherReadingMessage;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define WeatherReadingMessage_init_default       {0, 0, 0, 0, 0, 0}
#define WeatherReadingMessage_init_zero          {0, 0, 0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define WeatherReadingMessage_temperature_tag    1
#define WeatherReadingMessage_humidity_tag       2
#define WeatherReadingMessage_barometric_pressure_tag 3
#define WeatherReadingMessage_wind_speed_tag     4
#define WeatherReadingMessage_rainfall_tag       5
#define WeatherReadingMessage_wind_direction_tag 6

/* Struct field encoding specification for nanopb */
#define WeatherReadingMessage_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, FLOAT,    temperature,       1) \
X(a, STATIC,   SINGULAR, FLOAT,    humidity,          2) \
X(a, STATIC,   SINGULAR, FLOAT,    barometric_pressure,   3) \
X(a, STATIC,   SINGULAR, FLOAT,    wind_speed,        4) \
X(a, STATIC,   SINGULAR, FLOAT,    rainfall,          5) \
X(a, STATIC,   SINGULAR, UINT32,   wind_direction,    6)
#define WeatherReadingMessage_CALLBACK NULL
#define WeatherReadingMessage_DEFAULT NULL

extern const pb_msgdesc_t WeatherReadingMessage_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define WeatherReadingMessage_fields &WeatherReadingMessage_msg

/* Maximum encoded size of messages (where known) */
#define PROTO_WEATHER_READING_PB_H_MAX_SIZE      WeatherReadingMessage_size
#define WeatherReadingMessage_size               31

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
